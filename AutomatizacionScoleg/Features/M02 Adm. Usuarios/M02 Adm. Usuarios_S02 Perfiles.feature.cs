// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AutomatizacionScoleg.Features.M02Adm_Usuarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("M02 Adm. Usuarios_S02 Perfil")]
    public partial class M02Adm_Usuarios_S02PerfilFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "M02 Adm. Usuarios_S02 Perfiles.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("es"), "M02 Adm. Usuarios_S02 Perfil", "\tMacro Proceso Administrador\r\n\tProceso Administrador de usuarios\r\n\tSubProceso Per" +
                    "fil", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CP05_Listar Perfil")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void CP05_ListarPerfil()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CP05_Listar Perfil", new string[] {
                        "mytag"});
#line 60
this.ScenarioSetup(scenarioInfo);
#line 61
testRunner.Given("El usuario selecciona la opción del menú Listar Perfiles", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 62
testRunner.Then("El sistema despliegue una grilla con los registros de perfiles existentes en el s" +
                    "istema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entonces ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CP01_Ingresar Perfil")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        [NUnit.Framework.TestCaseAttribute("PerfilIngresarAuto", "Entrada Completa", new string[] {
                "source:M02_Adm.Usuarios.xlsx:M02-0202.0101.INGRESAR.PERFIL"}, Category="source:M02_Adm.Usuarios.xlsx:M02-0202.0101.INGRESAR.PERFIL")]
        public virtual void CP01_IngresarPerfil(string descripcionPerfil, string grupoPerfil, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "mytag"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CP01_Ingresar Perfil", @__tags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("El usuario ingresa a la opción de menú Perfiles", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 9
 testRunner.And("El sistema despliega el formulario para ingresar perfil", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 10
 testRunner.When(string.Format("El usuario ingresa {0} en el campo Descripción", descripcionPerfil), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Cuando ");
#line 11
 testRunner.And(string.Format("El usuario selecciona un {0} en el campo Grupo de Perfil", grupoPerfil), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 12
 testRunner.And("El usuario pulsa el botón Registrar nuevo perfil", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 13
 testRunner.And("El usuario confirma el ingreso del registro de nuevo perfil", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 14
 testRunner.Then("El sistema crea el nuevo Perfil", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entonces ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CP02_Editar Perfil")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        [NUnit.Framework.TestCaseAttribute("Test 2", "Grupo v3", "Test 2 Editado", "SGL", new string[] {
                "source:M02_Adm.Usuarios.xlsx:M02-0202.0202_EDITAR.PERFIL"}, Category="source:M02_Adm.Usuarios.xlsx:M02-0202.0202_EDITAR.PERFIL")]
        public virtual void CP02_EditarPerfil(string descripcionPerfil, string grupoPerfil, string descripcionEditar, string grupoEditar, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "mytag"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CP02_Editar Perfil", @__tags);
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
 testRunner.Given("El usuario ingresa a la opcion de menú Listar Perfiles", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 23
 testRunner.And(string.Format("El usuario presiona el botón editar según {0} de la lista", descripcionPerfil), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 24
 testRunner.And("El sistema despliega el formulario para editar un perfil", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 25
 testRunner.When(string.Format("El usuario edita {0} en el campo Descripcion Perfil", descripcionEditar), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Cuando ");
#line 26
 testRunner.And(string.Format("El usuario cambia un {0} del campo Grupo de Perfil", grupoEditar), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 27
 testRunner.And("El usuario pulsa el boton Editar nuevo perfil", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 28
 testRunner.Then("El usuario confirma la modificacion del perfil", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entonces ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CP03_Ver Detalle Perfil")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        [NUnit.Framework.TestCaseAttribute("Perfil prueba", "Grupo v3", new string[] {
                "source:M02_Adm.Usuarios.xlsx:M02-0202.0505_VERDETALLE.PERFIL"}, Category="source:M02_Adm.Usuarios.xlsx:M02-0202.0505_VERDETALLE.PERFIL")]
        public virtual void CP03_VerDetallePerfil(string descripcionPerfil, string grupoPerfil, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "mytag"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CP03_Ver Detalle Perfil", @__tags);
#line 36
this.ScenarioSetup(scenarioInfo);
#line 37
 testRunner.Given("El usuario ingresa a la opcion del menu Listar Perfiles", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 38
 testRunner.When(string.Format("El usuario presiona el boton Ver Detalle según {0} y {1} de la lista", descripcionPerfil, grupoPerfil), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Cuando ");
#line 39
 testRunner.And(string.Format("El usuario verifica los elementos mostrados {0} y {1}", descripcionPerfil, grupoPerfil), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 40
 testRunner.Then("El sistema cierra la ventana modal detalle registro", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entonces ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CP04_Eliminar Perfil")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        [NUnit.Framework.TestCaseAttribute("Usuario 3", "Grupo v3", new string[] {
                "source:M02_Adm.Usuarios.xlsx:M02-0202.0303_ELIMINAR.PERFIL"}, Category="source:M02_Adm.Usuarios.xlsx:M02-0202.0303_ELIMINAR.PERFIL")]
        public virtual void CP04_EliminarPerfil(string descripcionPerfil, string grupoPerfil, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "mytag"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CP04_Eliminar Perfil", @__tags);
#line 48
this.ScenarioSetup(scenarioInfo);
#line 49
testRunner.Given("El usuario ingresa a la opcion del menú Listar Perfiles", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 50
testRunner.When(string.Format("El usuario presiona el botón Eliminar según {0} y {1} de la lista", descripcionPerfil, grupoPerfil), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Cuando ");
#line 51
testRunner.And("El usuario presiona boton Eliminar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 52
testRunner.And("El usuario confirma la eliminación del registro", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Y ");
#line 53
testRunner.Then("El sistema muestra la confirmación y el usuario cierra la ventana", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entonces ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

